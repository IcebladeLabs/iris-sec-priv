A path traversal vulnerability allows an attacker to access files on your web server to which they should not have access. They do this by tricking either the web server or the web application running on it into returning files that exist outside of the web root folder. Another attack pattern is that users can pass in malicious Zip file which may contain directories like "../". Typical sources of this vulnerability involves obtaining information from untrusted user input through web requests, getting entry directory from Zip files. Sinks will relate to file system manipulation, such as creating file, listing directories, and etc.

Some example source/sink/taint-propagator methods are:
[
  {
    "package": "java.util.zip",
    "class": "ZipEntry",
    "method": "getName",
    "signature": "String getName()",
    "sink_args": [],
    "type": "source"
  },
  {
    "package": "java.io",
    "class": "FileInputStream",
    "method": "FileInputStream",
    "signature": "FileInputStream(File file)",
    "sink_args": [
      "file"
    ],
    "type": "sink"
  },
  {
    "package": "java.net",
    "class": "URL",
    "method": "URL",
    "signature": "URL(String url)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "File",
    "signature": "File(String path)",
    "sink_args": [],
    "type": "taint-propagator"
  }
]

Among the following methods, assuming that the arguments passed to the given function is malicious, what are the functions that are potential source, sink, or taint-propagators to Path Traversal or Zip Slip attack (CWE-022)?

Package,Class,Method,Signature
org.eclipse.jetty.server,Server,getThreadPool,ThreadPool getThreadPool()
org.eclipse.jetty.server,Server,join,void join()
org.eclipse.jetty.server,Server,setConnectors,void setConnectors(Connector[] p0)
org.eclipse.jetty.server,Server,setRequestLog,void setRequestLog(RequestLog p0)
org.eclipse.jetty.server,ServerConnector,ServerConnector,ServerConnector(Server p0)
org.eclipse.jetty.server,ServerConnector,ServerConnector,ServerConnector(Server p0, ConnectionFactory[] p1)
org.eclipse.jetty.server,ServerConnector,ServerConnector,ServerConnector(Server p0, SslContextFactory p1, ConnectionFactory[] p2)
org.eclipse.jetty.server,ServerConnector,setSoLingerTime,void setSoLingerTime(int p0)
org.eclipse.jetty.server,SslConnectionFactory,getSslContextFactory,SslContextFactory getSslContextFactory()
org.eclipse.jetty.server.handler,Context,getAttribute,Object getAttribute(String p0)
org.eclipse.jetty.server.handler,ContextHandler,getServletContext,Context getServletContext()
org.eclipse.jetty.server.handler,ContextHandler,setContextPath,void setContextPath(String p0)
org.eclipse.jetty.server.handler,HandlerCollection,setHandlers,void setHandlers(Handler[] p0)
org.eclipse.jetty.server.handler,HandlerList,HandlerList,HandlerList()
org.eclipse.jetty.server.handler,HandlerWrapper,setHandler,void setHandler(Handler p0)
org.eclipse.jetty.server.session,SessionHandler,SessionHandler,SessionHandler()
org.eclipse.jetty.servlet,ServletContextHandler,ServletContextHandler,ServletContextHandler(HandlerContainer p0, String p1, boolean p2, boolean p3)
org.eclipse.jetty.util,NotUtf8Exception,NotUtf8Exception,NotUtf8Exception(String p0)
org.eclipse.jetty.util,URIUtil,encodePath,String encodePath(String p0)
org.eclipse.jetty.util.component,AbstractLifeCycle,start,void start()
org.eclipse.jetty.util.component,AbstractLifeCycle,stop,void stop()
org.eclipse.jetty.util.resource,Resource,getFile,File getFile()
org.eclipse.jetty.util.ssl,SslContextFactory,SslContextFactory,SslContextFactory(String p0)
org.eclipse.jetty.util.ssl,SslContextFactory,getKeyStoreResource,Resource getKeyStoreResource()
org.eclipse.jetty.util.ssl,SslContextFactory,getTrustStoreResource,Resource getTrustStoreResource()
org.eclipse.jetty.util.ssl,SslContextFactory,setKeyStorePassword,void setKeyStorePassword(String p0)
org.eclipse.jetty.util.ssl,SslContextFactory,setNeedClientAuth,void setNeedClientAuth(boolean p0)
org.eclipse.jetty.util.ssl,SslContextFactory,setTrustStorePassword,void setTrustStorePassword(String p0)
org.eclipse.jetty.util.ssl,SslContextFactory,setTrustStorePath,void setTrustStorePath(String p0)
org.eclipse.jetty.util.ssl,SslContextFactory,setWantClientAuth,void setWantClientAuth(boolean p0)

