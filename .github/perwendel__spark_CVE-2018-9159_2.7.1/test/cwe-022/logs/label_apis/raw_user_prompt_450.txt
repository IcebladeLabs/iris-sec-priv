A path traversal vulnerability allows an attacker to access files on your web server to which they should not have access. They do this by tricking either the web server or the web application running on it into returning files that exist outside of the web root folder. Another attack pattern is that users can pass in malicious Zip file which may contain directories like "../". Typical sources of this vulnerability involves obtaining information from untrusted user input through web requests, getting entry directory from Zip files. Sinks will relate to file system manipulation, such as creating file, listing directories, and etc.

Some example source/sink/taint-propagator methods are:
[
  {
    "package": "java.util.zip",
    "class": "ZipEntry",
    "method": "getName",
    "signature": "String getName()",
    "sink_args": [],
    "type": "source"
  },
  {
    "package": "java.io",
    "class": "FileInputStream",
    "method": "FileInputStream",
    "signature": "FileInputStream(File file)",
    "sink_args": [
      "file"
    ],
    "type": "sink"
  },
  {
    "package": "java.net",
    "class": "URL",
    "method": "URL",
    "signature": "URL(String url)",
    "sink_args": [],
    "type": "taint-propagator"
  },
  {
    "package": "java.io",
    "class": "File",
    "method": "File",
    "signature": "File(String path)",
    "sink_args": [],
    "type": "taint-propagator"
  }
]

Among the following methods, assuming that the arguments passed to the given function is malicious, what are the functions that are potential source, sink, or taint-propagators to Path Traversal or Zip Slip attack (CWE-022)?

Package,Class,Method,Signature
org.apache.http.config,RegistryBuilder,create,RegistryBuilder<I> create()
org.apache.http.config,RegistryBuilder,register,RegistryBuilder<ConnectionSocketFactory> register(String p0, ConnectionSocketFactory p1)
org.apache.http.conn.ssl,SSLConnectionSocketFactory,SSLConnectionSocketFactory,SSLConnectionSocketFactory(SSLSocketFactory p0, HostnameVerifier p1)
org.apache.http.entity,StringEntity,StringEntity,StringEntity(String p0)
org.apache.http.impl.client,DefaultRedirectStrategy,DefaultRedirectStrategy,DefaultRedirectStrategy()
org.apache.http.impl.client,DefaultRedirectStrategy,isRedirected,boolean isRedirected(HttpRequest p0, HttpResponse p1, HttpContext p2)
org.apache.http.impl.client,HttpClientBuilder,build,CloseableHttpClient build()
org.apache.http.impl.client,HttpClientBuilder,create,HttpClientBuilder create()
org.apache.http.impl.client,HttpClientBuilder,setConnectionManager,HttpClientBuilder setConnectionManager(HttpClientConnectionManager p0)
org.apache.http.impl.client,HttpClientBuilder,setRedirectStrategy,HttpClientBuilder setRedirectStrategy(RedirectStrategy p0)
org.apache.http.impl.conn,BasicHttpClientConnectionManager,BasicHttpClientConnectionManager,BasicHttpClientConnectionManager(Lookup<ConnectionSocketFactory> p0)
org.apache.http.message,AbstractHttpMessage,setHeader,void setHeader(String p0, String p1)
org.apache.http.util,EntityUtils,toString,String toString(HttpEntity p0)
org.eclipse.jetty.http.pathmap,MappedResource,getPathSpec,PathSpec getPathSpec()
org.eclipse.jetty.http.pathmap,PathSpec,getDeclaration,String getDeclaration()
org.eclipse.jetty.http.pathmap,ServletPathSpec,ServletPathSpec,ServletPathSpec(String p0)
org.eclipse.jetty.server,AbstractConnector,getServer,Server getServer()
org.eclipse.jetty.server,AbstractConnector,setIdleTimeout,void setIdleTimeout(long p0)
org.eclipse.jetty.server,AbstractNetworkConnector,setHost,void setHost(String p0)
org.eclipse.jetty.server,AbstractNetworkConnector,setPort,void setPort(int p0)
org.eclipse.jetty.server,ForwardedRequestCustomizer,ForwardedRequestCustomizer,ForwardedRequestCustomizer()
org.eclipse.jetty.server,HttpConfiguration,HttpConfiguration,HttpConfiguration()
org.eclipse.jetty.server,HttpConfiguration,addCustomizer,void addCustomizer(Customizer p0)
org.eclipse.jetty.server,HttpConfiguration,setSecureScheme,void setSecureScheme(String p0)
org.eclipse.jetty.server,HttpConnectionFactory,HttpConnectionFactory,HttpConnectionFactory(HttpConfiguration p0)
org.eclipse.jetty.server,NCSARequestLog,NCSARequestLog,NCSARequestLog(String p0)
org.eclipse.jetty.server,Request,setHandled,void setHandled(boolean p0)
org.eclipse.jetty.server,Server,Server,Server()
org.eclipse.jetty.server,Server,Server,Server(ThreadPool p0)
org.eclipse.jetty.server,Server,getConnectors,Connector[] getConnectors()

