import java
import semmle.code.java.dataflow.DataFlow
private import semmle.code.java.dataflow.ExternalFlow

predicate isGPTDetectedSink(DataFlow::Node snk) {
    exists(Call c |
        c.getCallee().getName() = "sendRedirect" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("javax.servlet.http", "HttpServletResponse") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "doFilter" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("javax.servlet", "Filter") and
        ( c.getArgument(0) = snk.asExpr().(Argument)  or  c.getArgument(1) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "setTrustStorePath" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.eclipse.jetty.util.ssl", "SslContextFactory") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "setHost" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.eclipse.jetty.server", "AbstractNetworkConnector") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "setSecureScheme" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.eclipse.jetty.server", "HttpConfiguration") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "doFilter" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("javax.servlet", "FilterChain") and
        ( c.getArgument(0) = snk.asExpr().(Argument)  or  c.getArgument(1) = snk.asExpr().(Argument) )
    )
    or
1 = 0
    or
1 = 0
    or
1 = 0
    or
1 = 0
    or
    exists(Call c |
        c.getCallee().getName() = "MalformedURLException" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.net", "MalformedURLException") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "FileInputStream" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "FileInputStream") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "get" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.nio.file", "Paths") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "write" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "PrintWriter") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
1 = 0
    or
1 = 0
    or
1 = 0
    or
    exists(Call c |
        c.getCallee().getName() = "PrintWriter" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "PrintWriter") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "write" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "Writer") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
1 = 0
    or
    exists(Call c |
        c.getCallee().getName() = "HttpPost" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpPost") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "delete" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "File") and
        ( c.getQualifier() = snk.asExpr() )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "FileWriter" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "FileWriter") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "write" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "Writer") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "URLClassLoader" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.net", "URLClassLoader") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "NCSARequestLog" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.eclipse.jetty.server", "NCSARequestLog") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
1 = 0
    or
    exists(Call c |
        c.getCallee().getName() = "setWar" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.eclipse.jetty.webapp", "WebAppContext") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "mkdirs" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "File") and
        ( c.getQualifier() = snk.asExpr() )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "createNewFile" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "File") and
        ( c.getQualifier() = snk.asExpr() )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "HttpGet" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpGet") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "setHeader" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.message", "AbstractHttpMessage") and
        ( c.getArgument(0) = snk.asExpr().(Argument)  or  c.getArgument(1) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "HttpPatch" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpPatch") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "HttpDelete" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpDelete") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "HttpPut" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpPut") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "HttpHead" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpHead") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "HttpTrace" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpTrace") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "HttpOptions" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("org.apache.http.client.methods", "HttpOptions") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
    or
    exists(Call c |
        c.getCallee().getName() = "FileInputStream" and
        c.getCallee().getDeclaringType().getSourceDeclaration().hasQualifiedName("java.io", "FileInputStream") and
        ( c.getArgument(0) = snk.asExpr().(Argument) )
    )
}


